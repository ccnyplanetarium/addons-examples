local assetHelper = asset.require('util/asset_helper')
--This transform gets the barycenter location to use as Parent
local transforms = asset.require("scene/solarsystem/sun/transforms")

--Define meters/parsec
local PARSEC_CONSTANT = 3.0856776E16;

      local exampleImage = {
          Identifier = "exampleImageAsset",
          Parent = transforms.SolarSystemBarycenter.Identifier,
          Transform = {
              -- this is an x,y,z static translation to put it somewhere
              Translation = {
                  Type = "StaticTranslation",
                  Position = {-97.60384441*PARSEC_CONSTANT,860.90740139*PARSEC_CONSTANT,499.31146171*PARSEC_CONSTANT}
              },
              -- this is a rotation which you can adjust in the GUI to have is facing how you want
              Rotation = {
                  Type = "StaticRotation",
                  Rotation = {-2.761593,-1.091593,-1.931593}
              }
          },
          Renderable = {
              Type = "RenderablePlaneImageLocal",
              Size = 1e18,
              Enabled = true,
              Origin = "Center",
              --billboards = true will have the image always face the camera
              Billboard = false,
              Texture = asset.localResource('Heic0414b.jpg'),
              BlendMode = "Additive",
              Opacity = 0.7
          },
          Tag = {"Image"},
          GUI = {
            Name = "ExampleImageInSpace",
            Path = "/Examples"
          }
        }

assetHelper.registerSceneGraphNodesAndExport(asset, { exampleImage })
